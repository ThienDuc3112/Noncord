definitions:
  request.CreateChannel:
    properties:
      description:
        type: string
      name:
        type: string
      parentCategory:
        type: string
      serverId:
        type: string
    required:
    - name
    - serverId
    type: object
  request.Login:
    properties:
      password:
        example: Password1@
        type: string
      username:
        example: tungsten_kitty
        type: string
    required:
    - password
    - username
    type: object
  request.NewInvitation:
    properties:
      bypassApproval:
        type: boolean
      expiresAt:
        type: string
      joinLimit:
        type: integer
    type: object
  request.NewServer:
    properties:
      name:
        example: My very good server
        maxLength: 256
        type: string
    required:
    - name
    type: object
  request.Refresh:
    properties:
      refreshToken:
        example: 9Vz6ayzM0scQSIXHtYVbKcDeF1aa0aLs
        type: string
    required:
    - refreshToken
    type: object
  request.Register:
    properties:
      email:
        example: tungstenkitty@gmail.com
        type: string
      password:
        example: Password1@
        maxLength: 72
        minLength: 8
        type: string
      username:
        example: tungsten_kitty
        type: string
    required:
    - email
    - password
    - username
    type: object
  request.UpdateChannel:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  request.UpdateInvitation:
    properties:
      bypassApproval:
        type: boolean
      joinLimit:
        type: integer
    type: object
  request.UpdateServer:
    properties:
      announcementChannel:
        type: string
      bannerUrl:
        type: string
      defaultPermission:
        type: integer
      description:
        type: string
      iconUrl:
        type: string
      name:
        type: string
      needApproval:
        type: boolean
    type: object
  response.Channel:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      order:
        type: integer
      parentCategory:
        type: string
      serverId:
        type: string
      updatedAt:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  response.GetInvitationResponse:
    properties:
      id:
        type: string
      server:
        $ref: '#/definitions/response.ServerPreview'
    type: object
  response.GetServerResponse:
    properties:
      announcementChannel:
        type: string
      bannerUrl:
        type: string
      channels:
        items:
          $ref: '#/definitions/response.Channel'
        type: array
      createdAt:
        type: string
      defaultPermission:
        type: integer
      description:
        type: string
      iconUrl:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  response.GetServersResponse:
    properties:
      result:
        items:
          $ref: '#/definitions/response.ServerPreview'
        type: array
    type: object
  response.Invitation:
    properties:
      bypassApproval:
        type: boolean
      createdAt:
        type: string
      expiresAt:
        type: string
      id:
        type: string
      joinCount:
        type: integer
      joinLimit:
        type: integer
      serverId:
        type: string
    type: object
  response.JoinServerResponse:
    properties:
      membership:
        $ref: '#/definitions/response.Membership'
      server:
        $ref: '#/definitions/response.ServerPreview'
    type: object
  response.Membership:
    properties:
      createdAt:
        type: string
      nickname:
        type: string
      serverId:
        type: string
      userId:
        type: string
    type: object
  response.NewServerResponse:
    properties:
      id:
        type: string
    type: object
  response.ServerPreview:
    properties:
      bannerUrl:
        type: string
      iconUrl:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  response.TokensResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  response.UpdateServerResponse:
    properties:
      announcementChannel:
        type: string
      bannerUrl:
        type: string
      createdAt:
        type: string
      defaultPermission:
        type: integer
      description:
        type: string
      iconUrl:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
  description: This is the api for Noncord
  title: Noncord API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Logging in an account without sso
      parameters:
      - description: New account data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: Access and refresh tokens
          schema:
            $ref: '#/definitions/response.TokensResponse'
        "400":
          description: Missing field
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Wrong credential
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: SSO enabled account
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login
      tags:
      - Auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: Invalidate the current session
      parameters:
      - description: New account data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.Refresh'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unknown session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Logout
      tags:
      - Auth
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Rotate current refresh token
      parameters:
      - description: New account data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.Refresh'
      produces:
      - application/json
      responses:
        "200":
          description: Access and refresh tokens
          schema:
            $ref: '#/definitions/response.TokensResponse'
        "400":
          description: Missing field
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unknown session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Refresh
      tags:
      - Auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register an account
      parameters:
      - description: New account data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Account created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register an account
      tags:
      - Auth
  /api/v1/channels:
    post:
      description: Create channel
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: channel id to fetch
        in: path
        name: channel_id
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.CreateChannel'
      produces:
      - application/json
      responses:
        "200":
          description: Created channel
          schema:
            $ref: '#/definitions/response.Channel'
        "400":
          description: Invalid body or invalid channel id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Cannot authenticate user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden action
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Channel not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Create channel
      tags:
      - Channel
  /api/v1/channels/{channel_id}:
    get:
      description: Get channel details
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: channel id to fetch
        in: path
        name: channel_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Channel'
        "400":
          description: Invalid channel id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Channel not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get channel details
      tags:
      - Channel
    patch:
      description: Update channel
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: channel id
        in: path
        name: channel_id
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.UpdateChannel'
      produces:
      - application/json
      responses:
        "200":
          description: New updated channel
          schema:
            $ref: '#/definitions/response.Channel'
        "400":
          description: Invalid body or invalid channel id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Cannot authenticate user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden action
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Channel not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update channel
      tags:
      - Channel
    put:
      description: Update channel
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: channel id
        in: path
        name: channel_id
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.UpdateChannel'
      produces:
      - application/json
      responses:
        "200":
          description: New updated channel
          schema:
            $ref: '#/definitions/response.Channel'
        "400":
          description: Invalid body or invalid channel id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Cannot authenticate user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden action
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Channel not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update channel
      tags:
      - Channel
  /api/v1/invitations/{channel_id}:
    delete:
      description: Delete channel
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: channel id
        in: path
        name: channel_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: invalid channel id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Cannot authenticate user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden action
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Channel not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Delete channel
      tags:
      - Channel
  /api/v1/invitations/{invitation_id}:
    delete:
      description: Invalidate an invitation by invitation id
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: invite id to fetch
        in: path
        name: invitation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid invitation id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Cannot authenticate user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden action
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Invitation not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Invalidate invitation
      tags:
      - Invitation
    get:
      description: Get an invitation detail by invitation id
      parameters:
      - description: invite id to fetch
        in: path
        name: invitation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetInvitationResponse'
        "400":
          description: Invalid invitation id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Invitation not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get invitation detail
      tags:
      - Invitation
    patch:
      description: Update invitation detail by invitation id
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: invite id to fetch
        in: path
        name: invitation_id
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.UpdateInvitation'
      produces:
      - application/json
      responses:
        "200":
          description: Updated invitation
          schema:
            $ref: '#/definitions/response.Invitation'
        "400":
          description: Invalid body or invalid invitation id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Cannot authenticate user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden action
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Invitation not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update invitation
      tags:
      - Invitation
    put:
      description: Update invitation detail by invitation id
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: invite id to fetch
        in: path
        name: invitation_id
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.UpdateInvitation'
      produces:
      - application/json
      responses:
        "200":
          description: Updated invitation
          schema:
            $ref: '#/definitions/response.Invitation'
        "400":
          description: Invalid body or invalid invitation id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Cannot authenticate user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden action
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Invitation not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update invitation
      tags:
      - Invitation
  /api/v1/invitations/{invitation_id}/join:
    post:
      description: Join a server through an invitation
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: invite id to join server
        in: path
        name: invitation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JoinServerResponse'
        "400":
          description: Invalid invitation id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Invitation not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Join a server
      tags:
      - Invitation
  /api/v1/message:
    post:
      consumes:
      - application/json
      description: Send a message
      parameters:
      - description: Message content
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Message sent
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: User not allowed to send message in the request channel/group
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Target channel/group not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Send a message
      tags:
      - Message
  /api/v1/message/{message_id}:
    get:
      consumes:
      - application/json
      description: Get a message details
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: message id to fetch
        in: path
        name: message_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Invalid message id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Message not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get a message
      tags:
      - Message
  /api/v1/message/channel/{channel_id}:
    get:
      consumes:
      - application/json
      description: Get messages in a channel using channel id, default limit to 100
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: channel id to fetch messages
        in: path
        name: channel_id
        required: true
        type: string
      - default: 100
        description: Message limit
        in: query
        maximum: 500
        minimum: 1
        name: limit
        type: integer
      - description: Time in unix
        in: query
        name: before
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Invalid channel id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Channel not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get messages by channel id
      tags:
      - Message
  /api/v1/message/group/{group_id}:
    get:
      consumes:
      - application/json
      description: Get messages in a group using group id, default limit to 100
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: channel id to fetch messages
        in: path
        name: group_id
        required: true
        type: string
      - default: 100
        description: Message limit
        in: query
        maximum: 500
        minimum: 1
        name: limit
        type: integer
      - description: Time in unix
        in: query
        name: before
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Invalid group id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Group not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get messages by group id
      tags:
      - Message
  /api/v1/server:
    get:
      description: Get all servers the user is in
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetServersResponse'
        "401":
          description: Unknown session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get servers by user
      tags:
      - Server
    post:
      consumes:
      - application/json
      description: Create a server
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Data for creating server
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.NewServer'
      produces:
      - application/json
      responses:
        "200":
          description: Server id
          schema:
            $ref: '#/definitions/response.NewServerResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unknown session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Create a server
      tags:
      - Server
  /api/v1/server/{server_id}:
    delete:
      description: Delete server by id
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Server Id
        in: path
        name: server_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unknown session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Server not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Delete server
      tags:
      - Server
    get:
      description: Get a server by id, can only get server the user is in
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: server id to fetch
        in: path
        name: server_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetServerResponse'
        "401":
          description: Unknown session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Server not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get a server
      tags:
      - Server
    patch:
      consumes:
      - application/json
      description: Update server
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update server
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.UpdateServer'
      - description: Server Id
        in: path
        name: server_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Updated server
          schema:
            $ref: '#/definitions/response.UpdateServerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unknown session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Server not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update server
      tags:
      - Server
    put:
      consumes:
      - application/json
      description: Update server
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update server
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.UpdateServer'
      - description: Server Id
        in: path
        name: server_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Updated server
          schema:
            $ref: '#/definitions/response.UpdateServerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unknown session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Server not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update server
      tags:
      - Server
  /api/v1/server/{server_id}/invitations:
    get:
      description: Get all server's invitations
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Server Id
        in: path
        name: server_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Invitation'
        "401":
          description: Unknown session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Server not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get server's invitations
      tags:
      - Server
    post:
      description: Get an invitation on a server
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Server Id
        in: path
        name: server_id
        required: true
        type: integer
      - description: Data for creating invitation
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.NewInvitation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Invitation'
        "401":
          description: Unknown session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Server not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Create invitation
      tags:
      - Server
swagger: "2.0"
