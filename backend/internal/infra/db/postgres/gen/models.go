// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package gen

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/google/uuid"
)

type ScopeType string

const (
	ScopeTypeSERVER  ScopeType = "SERVER"
	ScopeTypeCHANNEL ScopeType = "CHANNEL"
	ScopeTypeDM      ScopeType = "DM"
)

func (e *ScopeType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ScopeType(s)
	case string:
		*e = ScopeType(s)
	default:
		return fmt.Errorf("unsupported scan type for ScopeType: %T", src)
	}
	return nil
}

type NullScopeType struct {
	ScopeType ScopeType
	Valid     bool // Valid is true if ScopeType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullScopeType) Scan(value interface{}) error {
	if value == nil {
		ns.ScopeType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ScopeType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullScopeType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ScopeType), nil
}

type Attachment struct {
	ID        uuid.UUID
	Filetype  string
	Url       string
	Filename  string
	MessageID uuid.NullUUID
	UserID    uuid.UUID
	Size      int32
}

type BanEntry struct {
	ServerID  uuid.UUID
	UserID    uuid.UUID
	CreatedAt time.Time
}

type Category struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	DeletedAt sql.NullTime
	ServerID  uuid.UUID
	Name      string
	Ordering  int16
}

type Channel struct {
	ID             uuid.UUID
	CreatedAt      time.Time
	UpdatedAt      time.Time
	DeletedAt      sql.NullTime
	Name           string
	Description    string
	ServerID       uuid.UUID
	Ordering       int16
	ParentCategory uuid.NullUUID
}

type ChannelRolePermissionOverride struct {
	ChannelID uuid.UUID
	RoleID    uuid.UUID
	UpdatedAt time.Time
	Allow     int64
	Deny      int64
}

type ChannelUserPermissionOverride struct {
	ChannelID uuid.UUID
	UserID    uuid.UUID
	UpdatedAt time.Time
	Allow     int64
	Deny      int64
}

type DmGroup struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	DeletedAt sql.NullTime
	Name      string
	IconUrl   string
	IsGroup   bool
}

type DmGroupsMember struct {
	MemberID uuid.UUID
	GroupID  uuid.UUID
	JoinedAt time.Time
}

type Emote struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	DeletedAt sql.NullTime
	ServerID  uuid.UUID
	Name      string
	IconUrl   string
}

type FriendRequest struct {
	CreatedAt time.Time
	Requester uuid.UUID
	Target    uuid.UUID
	Message   string
}

type Friendship struct {
	CreatedAt time.Time
	UserID1   uuid.UUID
	UserID2   uuid.UUID
}

type Invitation struct {
	ID             uuid.UUID
	ServerID       uuid.UUID
	CreatedAt      time.Time
	ExpiredAt      sql.NullTime
	BypassApproval bool
	JoinLimit      int32
}

type JoinRequest struct {
	ID            uuid.UUID
	CreatedAt     time.Time
	ApprovedAt    sql.NullTime
	RevokedAt     sql.NullTime
	ServerID      uuid.UUID
	Requester     uuid.UUID
	Approver      uuid.NullUUID
	ApprovedState bool
}

type Membership struct {
	ServerID  uuid.UUID
	UserID    uuid.UUID
	CreatedAt time.Time
	Nickname  string
}

type Message struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	DeletedAt sql.NullTime
	ChannelID uuid.NullUUID
	GroupID   uuid.NullUUID
	AuthorID  uuid.UUID
	Message   string
}

type Reaction struct {
	MessageID uuid.UUID
	UserID    uuid.UUID
	EmoteID   uuid.UUID
}

type Role struct {
	ID           uuid.UUID
	CreatedAt    time.Time
	UpdatedAt    time.Time
	DeletedAt    sql.NullTime
	Name         string
	Color        int32
	Priority     int16
	AllowMention bool
	Permissions  int64
	ServerID     uuid.UUID
}

type RoleAssignment struct {
	ServerID  uuid.UUID
	UserID    uuid.UUID
	RoleID    uuid.UUID
	CreatedAt time.Time
}

type Server struct {
	ID                  uuid.UUID
	CreatedAt           time.Time
	UpdatedAt           time.Time
	DeletedAt           sql.NullTime
	Name                string
	Description         string
	IconUrl             string
	BannerUrl           string
	NeedApproval        bool
	DefaultRole         uuid.NullUUID
	AnnouncementChannel uuid.NullUUID
}

type Session struct {
	ID            uuid.UUID
	RotationCount int32
	CreatedAt     time.Time
	UpdatedAt     time.Time
	RevokedAt     sql.NullTime
	UserID        uuid.UUID
	UserAgent     string
}

type User struct {
	ID          uuid.UUID
	CreatedAt   time.Time
	UpdatedAt   time.Time
	DeletedAt   sql.NullTime
	Username    string
	DisplayName string
	AboutMe     string
	Email       string
	Password    sql.NullString
	Disabled    bool
	AvatarUrl   string
	BannerUrl   string
	Flags       int16
}

type UserNotificationOverride struct {
	ReferenceID          uuid.UUID
	UserID               uuid.UUID
	UpdatedAt            time.Time
	NotificationSettings int16
	Scope                ScopeType
}

type UserSetting struct {
	UserID                     uuid.UUID
	Language                   string
	DmAllowOption              int16
	DmFilterOption             int16
	FriendRequestPermission    int16
	CollectAnalyticsPermission bool
	Theme                      string
	ShowEmote                  bool
	NotificationSettings       int16
	AfkTimeout                 int64
}
